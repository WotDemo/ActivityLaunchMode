<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="ysn.com.demo">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".page.AActivity" />

        <!--SingleInstance的启动模式
        在一个新栈中创建该Activity的实例，并让多个应用共享该栈中的该Activity实例。
        一旦该模式的Activity实例已经存在于某个栈中，任何应用再激活该Activity时都会重用该栈中的实例(会调用onNewIntent()方法)。
        其效果相当于多个应用共享一个应用，不管谁激活该 Activity 都会进入同一个应用中-->
        <!--<activity-->
        <!--android:name=".page.BActivity"-->
        <!--android:launchMode="singleInstance"-->
        <!--android:taskAffinity="ysn.com.stack" />-->

        <!--SingleTask的启动模式
        如果栈中已存在该Activity的实例，则重用该实例(会调用onNewIntent()方法)。
        重用时，会让该实例回到栈顶，因此在它上面的实例将会被移出栈。
        如果栈中不存在该实例，将会创建新的实例放入栈中。-->
        <!--<activity-->
        <!--android:name=".page.BActivity"-->
        <!--android:launchMode="singleTask" />-->

        <!--SingleTop的启动模式
        如果栈顶是该Activity的实例，则重用该实例(会调用onNewIntent()方法)，
        否则创建新的实例并放在栈顶，即使栈中已经存在该Activity的实例，只要不在栈顶，都会创建新的实例-->
        <activity
            android:name=".page.BActivity"
            android:launchMode="singleTop" />

        <activity android:name=".page.CActivity" />
        <activity android:name=".page.DActivity" />
    </application>

</manifest>